snippet make "this creates a simple makefile for c++" b 
CC = g++

CFLAGS = -g

INCLUDE =

LIBS = 

# (TODO: enter filename without extension)
FILENAME =

all: $(FILENAME).cpp
	@$(CC) $(CFLAGS) $(INCLUDE) $(FILENAME).cpp -o $(FILENAME) $(LIBS)

run:
	@./$(FILENAME)	

clean:
	rm ./$(FILENAME) 
endsnippet

snippet make_pointer_cmake "this is a simple makefile to point at the makefile generated by cmake" b
# (TODO: enter project name here)
PROJECT_NAME = 
.SILENT: all project

all:
	# echo "#define USE_GLEW" > use_glew.h
	cd ../build; \
	make
	# rm use_glew.h && touch use_glew.h
	echo -e "\033[92m ------------- Compilation Successful ------------------- \033[0m" 

project:
	if [ ! -d "../build" ]; then mkdir ../build; fi
	if [ ! -d "../bin" ]; then mkdir ../bin; fi
	cd ../build; \
	cmake ..; \
	make

run:
	../bin/$(PROJECT_NAME)
	echo -e "\033[92m ------------- Execution Successful ------------------- \033[0m"

debug:
	cd ../build && \
	cmake -G "CodeLite - Unix Makefiles" .. && \
	codelite ${PROJECT_NAME}.workspace &! > /dev/null

clean:
	rm -rf ../build/*
	rm ../bin/*
endsnippet
